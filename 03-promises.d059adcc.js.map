{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAKxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAGnBG,EAAO,CAACJ,WAAUC,S,GAGnBA,E,IAdPR,EAAOe,iBAAiB,UAkBxB,SAAgBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOhB,EAAQiB,OACvBC,EAAOF,OAAOf,EAAOgB,OACrBE,EAASH,OAAOd,EAASe,QAEzBF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,IACrCC,EAAAzB,GAAS0B,OAAOC,QAAS,gCAG3B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CAEnCpB,EADeoB,EACSR,GACrBS,MAAK,SAAAC,G,IAAErB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAChBe,EAAAzB,GAAS0B,OAAOK,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEuB,OAAM,SAAAH,G,IAAErB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBe,EAAAzB,GAAS0B,OAAOC,QAAQ,oBAAmCK,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEU,GAASG,C,CAEbrB,EAAOgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector(\".form\");\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener(\"submit\", submit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n        // Fulfill\n      } else {\n        reject({position, delay});\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction submit(e) {\ne.preventDefault();\n\nlet delay = Number(delayEl.value);\nlet step = Number(stepEl.value);\nlet amount = Number(amountEl.value);\n\nif (delay < 0 || step < 0 || amount <= 0) {\n  Notiflix.Notify.failure(`Please enter a correct value`)\n};\n\nfor (let i = 1; i <= amount; i += 1) {\n  let position = i;\n  createPromise(position, delay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n}\nformEl.reset();\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.d059adcc.js.map"}