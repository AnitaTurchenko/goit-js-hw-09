{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAKxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAGnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAG1BA,EAAM,G,CAdbR,EAAOe,iBAAiB,UAkBxB,SAAgBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOhB,EAAQiB,OACvBC,EAAOF,OAAOf,EAAOgB,OACrBE,EAASH,OAAOd,EAASe,OAE7B,GAAIF,EAAQ,GAAKG,EAAO,GAAKC,GAAU,EAErC,YADAC,EAAAzB,GAAS0B,OAAOC,QAAQ,gCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CAEnCpB,EADeoB,EACSR,GACrBS,MAAK,EAACpB,SAACA,EAAQC,MAAEA,MAChBe,EAAAzB,GAAS0B,OAAOI,QAAQ,qBAAqBrB,QAAeC,MAAU,IAEvEqB,OAAM,EAACtB,SAACA,EAAQC,MAAEA,MACjBe,EAAAzB,GAAS0B,OAAOC,QAAQ,oBAAoBlB,QAAeC,MAAU,IAEvEU,GAASG,C,CAEbrB,EAAO8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst formEl = document.querySelector(\".form\");\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener(\"submit\", submit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n        // Fulfill\n      } else {\n        reject({position, delay});\n        // Reject\n      }\n    }, delay);\n  });\n}\n\nfunction submit(e) {\ne.preventDefault();\n\nlet delay = Number(delayEl.value);\nlet step = Number(stepEl.value);\nlet amount = Number(amountEl.value);\n\nif (delay < 0 || step < 0 || amount <= 0) {\n  Notiflix.Notify.failure(`Please enter a correct value`);\n  return;\n};\n\nfor (let i = 1; i <= amount; i += 1) {\n  let position = i;\n  createPromise(position, delay)\n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += step;\n}\nformEl.reset();\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.c7821c6e.js.map"}